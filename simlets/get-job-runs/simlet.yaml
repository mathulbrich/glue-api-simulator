simlet: get-job-runs

request:  
  - method: POST
  - uriPath: /
  - where: header
    named: "x-amz-target"
    equals: "AWSGlue.GetJobRuns"

JobName:
  is: parameter
  from: body
  element: .JobName

JobRuns:  
  is: parameter
  from: kvStore
  named: start-job-runs

JobRunsData:
  is: parameter
  from: constant
  eval: return JobRuns.get(JobName)

InternalJobArguments:
  is: parameter
  from: constant
  eval: return JobRuns.get(JobName).JobArguments

JobRunExists:
  is: parameter
  from: constant
  eval: return JobRuns.containsKey(JobName)

GetJobArgumentsScript:
  is: script
  executor:
    lang: javascript
  expression: >
    function getJobArguments() {
      var arguments = "" + _context.getValue('InternalJobArguments');
      return JSON.stringify(JSON.parse(arguments.replace(/([a-zA-Z0-9-_]+)=([^,|}]+)/g, '"$1":"$2"')));
    }
    getJobArguments();

JobArguments:
  is: parameter
  from: script
  script: "GetJobArgumentsScript"

responses:
  - when:
      request:
        - where: parameter
          named: JobRunExists
          equals: false
    from: template
    headers:
      - "Content-Type: application/json"
    status: 200
    body: |+
      {
        "JobRuns": []
      }

  - from: template
    status: 200
    headers:
      - "Content-Type: application/json"
    body: |+
      {
        "JobRuns": [
          {
            "Arguments": ${JobArguments},
            "Id": "${JobRunsData.JobRunId}",
            "JobName": "${JobRunsData.JobName}",
            "JobRunState": "SUCCEEDED"
          }
        ]
      }
